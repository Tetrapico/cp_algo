// DO NOT EDIT THIS FILE
// DO NOT EDIT THIS FILE
// DO NOT EDIT THIS FILE
// DO NOT EDIT THIS FILE

#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define pii pair<int, int>
#define pll pair<long long, long long>
#define pb push_back
#define ff first
#define ss second
#define YES cout << "YES\n"
#define NO cout << "NO\n"
#define nn "\n"
#define sci(x) scanf("%d", &x)
#define LL_INF (1LL << 62)
#define INF (1 << 30)
#define SetBit(x, k) (x |= (1LL << k))
#define ClearBit(x, k) (x &= ~(1LL << k))
#define CheckBit(x, k) (!!(x & (1LL << k)))
#define mod 998244353
#define N 400005


ll bit[3][N];
int n = N-2;

ll get(int i, int k)
{
    ll sum = 0;
    while (i)
    {
        sum += bit[k][i];
        i -= (i & -i);
    }
    return sum;
}

void update(int i, ll x, int k)
{
    while (i <= n)
    {
        bit[k][i] += x;
        i += (i & -i);
    }
}


int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;
    while(t--){
        int n;
        cin >> n;

        string s;
        cin >> s;

        ll ans = 0;

        vector<pii> v;

        int x = 0, y = 0;
        for(int i = 0; i < s.size(); i++){
            if(s[i]=='-') x++;
            else y++;

            int diff = 200000+x-y;
            int md = (3+(x-y)%3)%3;

            ans += get(diff, md)+(md==0 && diff>=200000);
            update(diff, 1, md);
            v.pb({md, diff});
            // cout << get(diff, md) << "***" << nn;
        }

        cout << ans << nn;

        for(pii z: v){
            update(z.ss, -1, z.ff);
        }
    }
    
    return 0;
}
